# =======================
# Stage 1: Build Frontend
# =======================
FROM node:18 AS frontend-build

# Set the working directory for frontend
WORKDIR /frontend

# Copy the package.json and package-lock.json files to the container
COPY ./frontend/package*.json ./

# Install frontend dependencies
RUN npm install

# Copy the rest of the frontend code
COPY ./frontend .

# Build the frontend React app
RUN npm run build

# =======================
# Stage 2: Build Backend
# =======================
FROM maven:3.8.6-openjdk-18-slim AS backend-build

# Set the working directory for backend
WORKDIR /backend

# Copy the pom.xml file and install dependencies
COPY ./backend/pom.xml ./
RUN mvn dependency:go-offline

# Copy the rest of the backend code
COPY ./backend .

# Build the Spring Boot backend application
RUN mvn clean package

# =======================
# Stage 3: Run Both Services
# =======================
FROM openjdk:18-slim

# Copy the backend app jar file from the previous build stage
COPY --from=backend-build /backend/target/backend-app.jar /backend/app.jar

# Copy the frontend build files from the frontend stage to the Nginx folder
COPY --from=frontend-build /frontend/build /usr/share/nginx/html

# Install Nginx
RUN apt-get update && apt-get install -y nginx

# Configure Nginx to serve frontend on port 80
RUN echo 'server {\n\
    listen 80;\n\
    server_name localhost;\n\
    location / {\n\
        root /usr/share/nginx/html;\n\
        index index.html index.htm;\n\
        try_files $uri $uri/ /index.html;\n\
    }\n\
}\n' > /etc/nginx/conf.d/default.conf

# Expose ports: 80 for frontend, 8070 for backend
EXPOSE 80 8070

# Start both Nginx and the backend application
CMD service nginx start && java -jar /backend/app.jar --server.port=8070
